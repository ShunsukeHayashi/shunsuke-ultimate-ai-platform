[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ultimate-shunsuke-ecosystem"
version = "1.0.0"
description = "Next-generation AI development platform with multi-agent orchestration"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "ShunsukeModel Team", email = "team@shunsuke-ecosystem.dev"}
]
maintainers = [
    {name = "ShunsukeModel Team", email = "team@shunsuke-ecosystem.dev"}
]
keywords = [
    "ai",
    "development", 
    "automation",
    "multi-agent",
    "quality-assurance",
    "claude",
    "mcp",
    "github-actions",
    "orchestration",
    "monitoring"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10", 
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: System :: Monitoring"
]
dependencies = [
    "asyncio-throttle>=1.0.2",
    "aiohttp>=3.8.0",
    "networkx>=3.0",
    "pydantic>=2.0.0",
    "pyyaml>=6.0",
    "click>=8.0.0",
    "rich>=13.0.0",
    "typer>=0.9.0",
    "beautifulsoup4>=4.12.0",
    "html2text>=2020.1.16",
    "langdetect>=1.0.9",
    "validators>=0.22.0",
    "requests>=2.31.0",
    "aiofiles>=23.0.0",
    "radon>=6.0.1",
    "structlog>=23.1.0",
    "colorama>=0.4.6",
    "cachetools>=5.3.0",
    "python-dotenv>=1.0.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0", 
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0",
    "coverage>=7.3.0"
]
docs = [
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=1.3.0", 
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0"
]
ai = [
    "openai>=1.0.0",
    "anthropic>=0.25.0",
    "langchain>=0.1.0",
    "tiktoken>=0.5.0"
]
quality = [
    "bandit>=1.7.5",
    "safety>=3.0.0",
    "ast-grep>=0.10.0"
]
cloud = [
    "azure-openai>=1.0.0",
    "google-cloud-aiplatform>=1.35.0", 
    "boto3>=1.28.0"
]
monitoring = [
    "prometheus-client>=0.17.0",
    "memory-profiler>=0.61.0",
    "py-spy>=0.3.14"
]
all = [
    "ultimate-shunsuke-ecosystem[dev,docs,ai,quality,cloud,monitoring]"
]

[project.scripts]
shunsuke-ecosystem = "core.command_tower.cli:main"
shunsuke-agent = "orchestration.coordinator.cli:main" 
shunsuke-quality = "tools.quality_analyzer.cli:main"

[project.urls]
Homepage = "https://github.com/shunsuke-dev/ultimate-shunsuke-ecosystem"
Documentation = "https://docs.shunsuke-ecosystem.dev"
Repository = "https://github.com/shunsuke-dev/ultimate-shunsuke-ecosystem.git"
"Bug Tracker" = "https://github.com/shunsuke-dev/ultimate-shunsuke-ecosystem/issues"
Changelog = "https://github.com/shunsuke-dev/ultimate-shunsuke-ecosystem/blob/main/CHANGELOG.md"

[tool.setuptools]
packages = ["core", "orchestration", "tools", "agents", "integration"]

[tool.setuptools.package-data]
"*" = ["*.yaml", "*.yml", "*.json", "*.md", "*.txt"]

[tool.black]
line-length = 120
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "networkx.*",
    "beautifulsoup4.*", 
    "html2text.*",
    "langdetect.*",
    "radon.*",
    "structlog.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=core",
    "--cov=orchestration", 
    "--cov=tools",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml"
]
testpaths = ["tests"]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.coverage.run]
source = ["core", "orchestration", "tools", "agents", "integration"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__init__.py",
    "*/cli.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "pass",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]